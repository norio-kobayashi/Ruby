.row.find_otivational_partner
	.container
		.row.first-row
			.span6.offset2
				%label=get_option(:find_motivational_partner_page_description)
		.row.second-row.search-option-box
			.span10
				.row.first-row
					%label.search-title Motivational Partner Search
					%p.search-title-desc Select One Box or Many to Narrow Your Search
				.row.second-row
					= form_tag :home_find_motivation_partner, :method => :get do
						.row
							.span3.cat-list
								%label Select a Category
								= select_tag(:parent_category_id, options_for_select(@parent_cat), :size=>12, :id=>'or', :onchange => "populate(this)", :class => 'choosen-select')
							.span3.sub-cat-list
								%label Select a Sub-Category
								= select_tag(:sub_category_id, options_for_select(@parent_cat), :size=>12, :id=>'de')
							.span4.find-options
								.row
									= select_tag(:country, options_for_select(UserInfo::registered_country))
								.row
									= select_tag(:state, options_for_select(UserInfo::registered_state))
								.row
									= select_tag(:city, options_for_select(UserInfo::registered_city))
								.row
									= select_tag(:age, options_for_select(UserInfo::registered_age))
								.row
									.span3{:style=>"margin-left:0px;"}
										= text_field_tag :words, params[:words], :placeholder => "Type Search Words Here"
									.span1{:style=>"margin-left:0px;"}										
										= submit_tag "Search", :name => nil, :class=>"btn btn-primary"

				.row.third-row
					.span10.item-box
						-@partners.each do |partner|
							.row.partner-item
								.span1.partner-picture{:style=>"margin-left: 10px;"}
									=link_to(image_tag(partner.image_url('small')), '/home/partner/'+partner.id.to_s)
								.span3.partner-info{:style=>"margin-left: 10px;"}
									.row
										%label.screen-name=partner.name
									.row
										%span= partner.age.to_s+'-'
										%span= partner.country.to_s+'-'
										%span= partner.state.to_s+'-'
										%span= partner.city
									-partner.categories.each do |cat|
										.row
											%label.category= cat.name
									.row																			
										=image_tag "fill-box.png"
										- if partner.is_online?
											=image_tag "online-icon.png"
											= link_to( image_tag("online-chat.png"),'#', :class=>'partner', "data-email" => partner.email, "data-recipient-id" => partner.id, "data-channel" => partner.channel )
										-else
											=image_tag "offline-icon.png"										
											=image_tag "offline-chat.png"
								.span1{:style=>"margin-left: 10px;"}
									.row
										%label.online-state= partner.is_online? ? "Online Now!" : "Offline"									
								.span4{:style=>"margin-left: 10px; width: 460px;"}
									%p What I Am Looking For In A Motivation Partner
									=partner.motivational_partner
						.row.paginate
							=will_paginate @partners, :param_name => 'partner_page' unless @partners.blank?

- if current_user
	= render 'shared/pusher_chat_widget'

				
:javascript
	$('#or option').first().attr('selected','selected')
	function populate(o){
		d=document.getElementById('de');
		if(!d){return;}			
		var all_cat= #{@sub_cat}
		var mitems=new Array();		
		var sub_cat

		for(i=0;i<all_cat.length; i++){
			s=all_cat[i]
			mitems[s[0]]=s[1]
		}
		d.options.length=0;
		cur=mitems[o.options[o.selectedIndex].value];
		if(!cur){return;}
		d.options.length=cur.length;
		for(var i=0;i<cur.length;i++)
		{
			d.options[i].text=cur[i][1];
			d.options[i].value=cur[i][0];
		}
	}				

	$(function() {
		widgets = 0;
		if("#{!current_user.nil?}" == "true") {			
			if("#{Rails.env}" == "development") {
				// Enable pusher logging - don't include this in production
				Pusher.log = function(message) {
					if (window.console && window.console.log) window.console.log(message);
				};

				// Flash fallback logging - don't include this in production
				WEB_SOCKET_DEBUG = true;
			}		
		
			var pusher = new Pusher('#{Pusher.key}');
			var channels = #{ current_user ? @partners.collect { |x| x.channel } : "'';" }; 

			$.each(channels, function(i, channel_name) {
				var channel = pusher.subscribe(channel_name);
				channel = pusher.subscribe(channel_name, channel.auth); 
				console.log('----------------');
				console.log(channel); 
				
				channel.bind('my-event', function(data) {
					var id = "widget_" + data.channel_name;
					var widget =	$('body').find("#" + id).first(); 
		
					if(!widget){
						var widget = $('#chat-widget').clone().show().attr('id', id);
						right = widgets * 310 + 30;	
				
						widget.css("right", right).appendTo('body');
						widgets++; 

						//updating widget 
						widget.first().find('.pusher-chat-widget-current-user-name:first').text(data.name); 

						widget.find('input[name=\"conversation[message][recipient_id]\"]').val(data.recipient_id.toString()); 
					}
 
					var activity = $('#chat-widget ul.activity-stream .activity:first').clone().show();
					activity.find('.screen-name:first').text(data.name);
					activity.find('.text:first').text(data.message);
					activity.find('.timestamp span:first').text(data.created_at); 

	 
					widget.find(".activity-stream").first().append(activity);	 

					//allow message in text field
					widget.find('.messageTextarea:first').attr('disabled', false); 
				});

			channel.bind('pusher:subscription_error', function(status) {
				console.debug('pusher-error=>'+status); 
			});

			channel.bind('pusher:subscription_succeeded', function() {
				console.debug('success');
			}); 
		}); 

		//click on online users
		$('.partner-item .partner-info a.partner').click(function(e){ 
			e.preventDefault(); 
			
			console.log($(this).data('channel').toString()); 
			
			var id = "widget_" + $(this).data('channel'); 
			console.log(id); 
			var widget =	$.find("#widget_" + $(this).data('channel').toString()); 
			var present = widget != '';
			
			console.log(widget);

			if(present) {
				return false;	
			}
			var widget = $('#chat-widget').clone().show().attr('id', id).css('visibility','visible').removeClass('hidden').addClass('pusher_chat_custom_widget');
			right = widgets * 310 + 30;	
			
			widget.css("right", right).appendTo('body');
			widgets++; 

			//updating widget 
			widget.find('.pusher-chat-widget-current-user-name:first').text($(this).data('email')); 

			widget.find('input[name=\"chat_conversation[chat_message][recipient_id]\"]').val($(this).data('recipient-id')); 
			$(".pusher-chat-widget").each(function(){
				var parent = $(this);
				$('a.close', $(this)).click(function(){
						parent.remove();
						console.log(widgets);
						if( widgets> 0 )
							widgets--;
				})
			});

			$('.messageTextarea:last').keydown(function(event) {
		    if (event.keyCode == 13) {
		    		var form = $(this.form);
		    		if($(this).val() == '') return false;
		    		$.ajax({
				      type: "post",
				      url: form.attr('action'), 
				      data: form.serialize(),
				      dataType:  'json',
				      beforeSend: function() {
				        form.find('.messageTextarea:last').attr('disabled', true); 
				      }, 
				      success: function(data) {
				      	form.find('.messageTextarea:last').val('');
				        form.disabled = false;
				      }
				    }); 
		        return false;
		     }
		  });
		}); 
		} 
	}); 